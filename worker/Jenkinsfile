pipeline {

  agent none

  stages{
    stage('build'){
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-alpine'
          args '-v $HOME/.m2:/root/.m2'
        }
      }

      when{
        changeset "**/worker/**"
      }

      steps{
        echo "Compiling Worker App"
        dir('worker'){
          sh 'mvn compile'
        }
      }
    }
    stage('test'){
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-alpine'
          args '-v $HOME/.m2:/root/.m2'
        }
      }

      when{
        changeset "**/worker/**"
      }

      steps{
        echo "Running Unit Tests on Worker App"
        dir('worker'){
          sh 'mvn clean test'
        }
      }
    }
    stage('package'){
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-alpine'
          args '-v $HOME/.m2:/root/.m2'
        }
      }

      when{
        branch 'master'
        changeset "**/worker/**"
      }

      steps{
        echo "Packaging Worker App"
        dir('worker'){
          sh 'mvn package -DskipTests'
          archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
        }
      }
    }
    stage('docker-package'){
      agent any

      when{
        changeset "**/worker/**"
      }

      steps{
        echo "Packaging Worker App with Docker"
        script{
          docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
            def workerImage = docker.build("mtilson/worker:v${env.BUILD_ID}", "./worker")
            workerImage.push()
            workerImage.push("${env.BRANCH_NAME}")
          }
        }
      }
    }
  }

  post{
    always{
      echo "Pipeline for Worker is complete.."
    }
    failure{
      slackSend (channel: "instavote-cd", message: "Build Failure - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
    success{
      slackSend (channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
  }
}
