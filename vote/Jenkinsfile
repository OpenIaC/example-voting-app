pipeline {
  agent none
  stages{
    stage('build'){
      agent{
        docker{
          image 'python:2.7.16-slim'
          args '--user root'
        }
      }

      when{
        changeset "**/vote/**"
      }

      steps{
        echo "Compiling Vote App"
        dir('vote'){
          sh 'pip install -r requirements.txt'
        }
      }
    }

    stage('test'){
      agent{
        docker{
          image 'python:2.7.16-slim'
          args '--user root'
        }
      }

      when{
        changeset "**/vote/**"
      }

      steps{
        echo "Running Unit Tests on Vote App"
        dir('vote'){
          sh 'pip install -r requirements.txt'
          sh 'nosetests -v'
        }
      }
    }

    stage('docker-package'){
      agent any

      when{
        branch 'master'
        changeset "**/vote/**"
      }

      steps{
        echo "Packaging Vote App with Docker"
        script{
          docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
            def voteImage = docker.build("mtilson/vote:v${env.BUILD_ID}", "./vote")
            voteImage.push()
            voteImage.push("${env.BRANCH_NAME}")
          }
        }
      }
    }
  }

  post{
    always{
      echo "Pipeline for Vote is complete.."
    }
    failure{
      slackSend (channel: "instavote-cd", message: "Build Failure - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
    success{
      slackSend (channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
  }
}
