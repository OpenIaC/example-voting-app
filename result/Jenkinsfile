pipeline {

  agent none

  stages{
    stage('build'){
      agent{
        docker{
          image 'node:8.16.0-alpine'
        }
      }
      when{
        changeset "**/result/**"
      }
      steps{
        echo "Compiling Result App"
        dir('result'){
          sh 'npm install'
        }
      }
    }
    stage('test'){
      agent{
        docker{
          image 'node:8.16.0-alpine'
        }
      }
      when{
        changeset "**/result/**"
      }
      steps{
        echo "Running Unit Tests on Result App"
        dir('result'){
          sh 'npm install'
          sh 'npm test'
        }
      }
    }
    stage('docker-package'){
      agent any

      when{
        branch 'master'
        changeset "**/result/**"
      }

      steps{
        echo "Packaging Result App with Docker"
        script{
          docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
            def resultImage = docker.build("mtilson/result:v${env.BUILD_ID}", "./result")
            resultImage.push()
            resultImage.push("${env.BRANCH_NAME}")
          }
        }
      }
    }
  }

  post{
    always{
      echo "Pipeline for Result is complete.."
    }
    failure{
      slackSend (channel: "instavote-cd", message: "Build Failure - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
    success{
      slackSend (channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
  }
}
